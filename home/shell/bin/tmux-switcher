#!/usr/bin/env sh
set -eo pipefail

function switch_session {
    local session="$1"
    local directory="$2"
    local workspace="$3"

    if ! tmux has-session -t "$session" 2> /dev/null; then
        tmux new-session -ds "$session" -c "$directory"
        tmux set-environment -t "$session" TMUX_WORKSPACE "$workspace"
    fi

    if [[ -z "$TMUX" ]]; then
        tmux attach-session -t "$session"
    else
        tmux switch-client -t "$session"
    fi
}

function switch_workspace {
    if [[ -z "$1" ]]; then
        return
    fi

    local workspace="$(echo $1 | tr ' .' _)"
    local session="workspace/$workspace/root"
    local directory="$HOME/workspaces/$1"

    switch_session "$session" "$directory" "$workspace"
}

function switch_project() {
    if [[ -z "$TMUX" ]]; then
        echo "Must run from inside an existing session"
        exit 1
    fi

    if [[ -z "$TMUX_WORKSPACE" ]]; then
        echo 'Environment variable TMUX_WORKSPACE is not set'
        exit 1
    fi

    if [[ -z "$1" ]]; then
        return
    fi

    local project="$(echo $1 | cut -d, -f2 | tr ' .' _)"
    local session="workspace/$TMUX_WORKSPACE/$project"
    local directory="$HOME/workspaces/$TMUX_WORKSPACE/$project"

    switch_session "$session" "$directory" "$TMUX_WORKSPACE"
}

function projects {
    find ~/workspaces/$TMUX_WORKSPACE -maxdepth 1 -mindepth 1 -type d -printf '%P\n'
}

function workspaces {
    find ~/workspaces -maxdepth 1 -mindepth 1 -type d -printf '%P\n'
}

case "$1" in
    find_workspace)
        switch_workspace "$(workspaces | fzf --exit-0)"
        ;;
    jump_workspace)
        if [[ -n "$2" && -f "~/workspaces/jumplist" ]]; then
            switch_workspace $(sed -n "~/workspaces/jumplist" "${2}p")
        fi
        ;;
    goto_root)
        if [[ -d "$HOME/workspaces/$TMUX_WORKSPACE" ]]; then
            switch_workspace "$TMUX_WORKSPACE"
        fi
        ;;
    find_project)
        switch_project "$(projects | fzf --exit-0)"
        ;;
    jump_project)
        if [[ -n "$2" && -f "$HOME/workspaces/$TMUX_WORKSPACE/jumplist" ]]; then
            switch_project $(sed -n "${2}p" "$HOME/workspaces/$TMUX_WORKSPACE/jumplist")
        fi
        ;;
    goto_project)
        if [[ -n "$2" && -d "$HOME/workspaces/$TMUX_WORKSPACE/$2" ]]; then
            switch_project "$2"
        fi
        ;;
    *)
        echo "unknown command: $1"
        exit 1
        ;;
esac
